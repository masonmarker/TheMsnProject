# standard api endpoint structure
# author : Mason Marker
# date : 11/17/2022

import ('lib/http.msn2')



# api structure
# contains host, port, path, and initial json data
class('api', =>(
    var('host', None),
    var('port', None),
    var('path', None),
    var('init_data', None)
))

# network api
var('api_network', api(?network?, 5000, '/', {}))

# local api
var('api_local', api(?localhost?, 5000, '/', {}))

# gets from an api endpoint
~ api_get(__api__) -> response
-- var('response', GET(__api__.host(), __api__.port(), __api__.path()))

# posts data to an api endpoint
# essentially calls update() on the current json with the new data being sent
~ api_post(__api__, data) -> response
-- var('response', POST(__api__.host(), __api__.port(), __api__.path(), ?data?))

# deletes from an api endpoint
~ api_delete(__api__) -> response
-- var('response', DELETE(__api__.host(), __api__.port(), __api__.path()))

# constructs the url that the api endpoint passed resides
~ api_url(__api__) -> path
-- var('path', cat('http://', __api__.host(), ':', __api__.port(), __api__.path()))

# gets the name of the thread hosting the api endpoint passed
~ api_thread_name(__api__) -> thread_name
-- var('thread_name', api_url(?__api__?))

# starts an api endpoint on a new thread
~ api_start(__api__) -> started
-- thread(api_get_path(?__api__?), =>(
    ENDPOINT(__api__.host(), __api__.port(), __api__.path(), __api__.init_data())
))
-- var('started', True)