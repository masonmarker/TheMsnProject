# demonstrates how join() can be used to join certain threads
# author : Mason Marker
# date : 11/8/2022


# boot
print('boot: starting main')

# starts the main thread
!{thread('main', =>(

    # main starting
    print('main: starting work'),

    # amount of work done
    var('work', 0),
    var('work_needed', 1000),

    # identifier that the child thread can start
    var('child1_can_start', False),

    # function that starts the child
    ~ start_child()->_,
    -- var('child1_can_start', True),


    # child declaration
    thread('child1', =>(

        # waits for signal to start
        wait(?child1_can_start?),

        # performs work
        for (0, ?work_needed?, 'i', =>(
            add('work', 2),
            sub('work', 1)
        ))        
    )),

    # starts the child thread
    start_child(),

    # joins the child thread with the main thread
    join('child1'),

    # asserts work was completed
    assert(?work? == ?work_needed?),

    # work done
    print('main: work completed'),

))}

# joins with the main thread
join('main')

# reassert work has been completed
assert(?work_needed? == 1000)

# shutdown
print('boot: shutting down')
