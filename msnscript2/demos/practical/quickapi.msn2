# demonstrates quick and seamless construction and manipulation of a local api endpoint
# using the api class
#
# author : Mason Marker
# date : 11/17/2022

# fresh console
if (windows(), console('cls'), console('clear'))


# imports api data structure
import ('lib/apis/api.msn2')

# user shell
import ('lib/user.msn2')

# construct an api object
var('local', api(?localhost?, 5000, '/stuff', {}))


# 'local' now holds the information of an api endpoint, 
# lib/apis/api.msn2 contains methods for practical manipulation of this object





# privately starts the endpoint on a new thread
private(api_start(?local?))

# provide small amount of time for endpoint start messages to finish printing to STDOUT
sleep(0.1)



# gets url of endpoint
private(print('url:', api_url(?local?)))

# gets current data from endpoint
private(print('GET() says initial data is', api_get(?local?)))





# posts data to endpoint
private(print(
    'POST() says', 
    api_post(?local?, {'entry1': {'name': 'bill', 'age': 45}})
))

# posts more data to endpoint
private(print(
    'POST() says', 
    api_post(?local?, {'entry2': {'name': 'john', 'age': 34}})
))

private(print(
    'DELETE() says',
    api_delete(?local?)
))

assert(<< |api_get(?local?)| == {} >>)

# offers command line injection
private(shell('usershell'))